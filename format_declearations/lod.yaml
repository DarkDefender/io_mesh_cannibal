meta:
  id: lod
  file-extension: lod
  title: Cannibal Level Of Detail Chunk
  license: CC0-1.0
  endian: le
doc: |
  These chunks store level of detail reduction information based on a specific
  combination of a geometry chunk and surface chunk.  The information describes
  discrete levels of detail in the form of alternate geometry and primary
  surface information to use at lower levels of detail, the level being one
  at full detail and zero at lowest detail (maximum distance).  Each level
  contains a vertex relay to the original geometry vertex indices, so that the
  lower details can use the same frame and sequence chunks as the original.
  The relay is a list of vertex index values into the original geometry, and
  its count indicates the number of vertices used by the level.  The triangle
  vertex indices are not actual geometry indices, but indices into the relay.
  UV indices directly map to the UVs of the original surface.

  Note that this form of LOD storage is not entirely compact, and is does not
  permit full (continuous) level of detail reduction.  This is a deliberate
  tradeoff of memory efficiency and flexibility in exchange for raw runtime
  speed.
doc-ref: Cannibal/CpjFmt.h
seq:
  - id: cpj_chunk_header
    type: cpj_chunk_header
  # Level info
  - id: num_levels
    type: u4
  - id: data_offset_levels
    type: u4
  # Tri info
  - id: num_tris
    type: u4
  - id: data_offset_tris
    type: u4
  # Vert relay info
  - id: num_vert_relay
    type: u4
  - id: data_offset_vert_relay
    type: u4
  # Data block
  - id: data_block
    type: data_block
    size-eos: true
instances:
  name:
    pos: cpj_chunk_header.offset_name
    type: strz
    encoding: ASCII
    if: cpj_chunk_header.offset_name != 0
types:
  cpj_chunk_header:
    seq:
      - id: magic
        contents: 'LODB'
      - id: file_len # Byte length of file data AFTER this variable
        type: u4
      # Format version
      - id: version
        # TODO check/ensure that this is version 3
        type: u4
      # Chunk creation time stamp
      - id: time_stamp
        type: u4
      - id: offset_name
        type: u4
  data_block:
    instances:
      levels:
        type: level
        pos: _root.data_offset_levels
        repeat: expr
        repeat-expr: _root.num_levels
      tris:
        type: tri
        pos: _root.data_offset_tris
        repeat: expr
        repeat-expr: _root.num_tris
      vert_relay:
        type: u2
        pos: _root.data_offset_vert_relay
        repeat: expr
        repeat-expr: _root.num_vert_relay
  level:
    seq:
      - id: detail
        type: f4
      - id: num_tri
        type: u4
      - id: num_vert_relay
        type: u4
      - id: first_tri
        type: u4
      - id: first_vert_relay
        type: u4
  tri:
    seq:
      - id: tri_index
        type: u4
      - id: vert_index
        type: u2
        repeat: expr
        repeat-expr: 3
      - id: uv_index
        type: u2
        repeat: expr
        repeat-expr: 3
